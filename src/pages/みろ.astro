---
const boardId = 'uXjVP53Yovc%3D';
const accessToken = 'eyJtaXJvLm9yaWdpbiI6ImV1MDEifQ_LYifkofBxr6K2yc2HYiTLTI25vc';
const apiUrl = `https://api.miro.com/v2/boards/${boardId}/items?limit=10`;
const clientId = '3458764550975504173';
const clientSecret = 'Let6PIwSE7Zwjgn9qw0egNZ7HkPQWYE5';
const refreshToken = 'eyJtaXJvLm9yaWdpbiI6ImV1MDEifQ_Af7EPR6R7mcupFm4KEZVo64kX8I';
async function getAccessToken() {
  

  const response = await fetch('https://api.miro.com/v1/oauth/token', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: `grant_type=refresh_token&client_id=${clientId}&client_secret=${clientSecret}&refresh_token=${refreshToken}`,
  });

  console.log(response)

  if (response.ok) {
    const jsonResponse = await response.json();
    const accessToken = jsonResponse.access_token;
    console.log('Access Token:', accessToken);
    return accessToken;
  } else {
    console.error('Failed to get access token:', response.status, response.statusText);
    return null;
  }
}


const test = getAccessToken()

console.log(test)

const requestOptions = {
  method: 'GET',
  headers: {
    'Accept': 'application/json',
    'Authorization': `Bearer ${test}`,
  },
};

async function fetchData() {
  try {
    const response = await fetch(apiUrl, requestOptions);
    const data = await response.json();
    return data;
  } catch (error) {
    console.error(`Error fetching data: ${error}`);
    return null;
  }
}

const miroBoardData = await fetchData();
---

<article>
  <h1>Miro Board Data</h1>
  <pre>{JSON.stringify(miroBoardData, null, 2)}</pre>
</article>